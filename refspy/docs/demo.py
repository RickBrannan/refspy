from context import *

from refspy.helper import refspy
from refspy.reference import is_book_reference
from refspy.utils import sequential_replace

URL = "https://github.com/eukras/refspy/refspy/docs/demo.py"

__ = refspy()

text = """
Bible references look like Rom 1:1, 6-7, 1 Cor 2-3, or Phlm 2-3, allowing
spaces in the number part and commas between references. Whereas '2-3' indicates
verses in Philemon it indicates chapters in 1 Corinthians. A reference to Second
Corinthians or II Cor (which allows line wrapping), provides context for any
references that follow, e.g. 5:21 or vv.25,37-38. If we refer to say Romans (but
then add a reference to Gal 4:4 in parentheses), a subsequent reference like
12:16 will still be to Romans. 
"""

matches = __.find_references(text, include_books=True)
strs, tags = [], []
for match_str, ref in matches:
    strs.append(match_str)
    if is_book_reference(ref):
        tags.append(f'<span class="yellow">{match_str}</span>')
    else:
        tags.append(
            f'<span class="green">{match_str}</span><sup>{__.abbrev(ref)}</sup>'
        )
index = []
for library, book_collation in __.collate(
    sorted([ref for _, ref in matches if not is_book_reference(ref)])
):
    for book, reference_list in book_collation:
        new_reference = __.merge(reference_list)
        index.append(__.abbrev(new_reference))


print("""
<html>
    <head>
        <style>
            a { text-decoration: none; }
            sup { font-family: sans-serif; font-size: xx-small;
                  color: purple; padding: 1px 3px; border: 1px solid purple;
                  border-radius: 3px; margin-left: 2px; }
            .green { background-color: #aaffaa; }
            .yellow { background-color: #ffffaa; }
        </style>
    </head>
    <body>
        <p><b>REFSPY</b>. <i>A Python library for working with biblical
        references in ordinary text.</i></p>
        <p>In the demonstration text below, references are highlighted in
        green, while book names that aren't themselves references but are used
        for context are highlighted in yellow. The identified references are
        noted in superscript, and an index is compiled at the end.</p>

""")
print(f"""
    <pre>{text}</pre>
    <p>{sequential_replace(text, strs, tags)}</p>
    <p><b>Index</b>. {"; ".join(index)}</p>
    <p>Generated by: <a href="{URL}">{URL}</a><p>
</html>
""")
