from refspy import refspy
from refspy.utils import sequential_replace

__ = refspy()

text = """
Human-written Bible references look like Rom 12:1, 6-17, 2 Cor 1:2-3:4, or Phlm
2-3. They wrap lines, use spaces in the number part, and have commas both
between and within references. They are sometimes malformed, like Matt 1:10000
or 1:3-2, but might also use abbreviations like Ps 119:122-24. A book name,
such as Second Corinthians, provides context for references that follow, such
as 5:21 or vv.25,37-38. If we refer to Romans (but then add a reference to 2
Cor 3:5-8 in parentheses), a subsequent reference like 12:16 will still be to Romans.
Using letters as partial verses, as in II Cor 5:30a-40d, has no consistent
meaning and must be read as whole verses.
"""

matches = __.find_references(text, include_books=True, include_nones=True)
strs, tags = [], []
for match_str, ref in matches:
    strs.append(match_str)
    if ref is None:
        tags.append(f'<span class="purple">{match_str}</span>')
    elif ref.is_book():
        tags.append(f'<span class="yellow">{match_str}</span>')
    else:
        tags.append(
            f'<span class="green">{match_str}</span><sup>{__.abbrev_name(ref)}</sup>'
        )

references = [ref for _, ref in matches if ref and not ref.is_book()]
index = __.make_index(references)

bible_gateway = (
    '<a href="https://www.biblegateway.com/passage/'
    + '?search={ESC_ABBREV_NAME}&version=NRSVA" '
    + ' target="_blank">{ABBREV_NAME}</a>'
)

summary = __.make_summary(references, pattern=bible_gateway)
hotspots = __.make_hotspots_text(references, max_chapters=7, min_references=2)

GENERATOR = "https://github.com/eukras/refspy/demo.py"

print("""
<html>
    <head>
        <style>
            a { text-decoration: none; }
            sup { font-family: sans-serif; font-size: xx-small;
                  color: purple; padding: 1px 3px; border: 1px solid purple;
                  border-radius: 3px; margin-left: 2px; }
            .green { background-color: #aaffaa; }
            .purple { background-color: #ffaaff; }
            .yellow { background-color: #ffffaa; }
        </style>
    </head>
""")
print(f"""
    <body>
        <p><b>REFSPY</b>. <i>A Python library for working with biblical
        references in ordinary text.</i></p>
        <p>In the demonstration text below, references are highlighted in <span
        class="green">green</span>, and identified in superscript<sup>Like
        This</sup>. Book names that aren't themselves references but provide
        context are highlighted in <span class="yellow">yellow</span>.
        Malformed references are highlighted in <span
        class="purple">purple</span>.</p>
        <blockquote><pre>{text}</pre></blockquote>
        <blockquote>{sequential_replace(text, strs, tags)}</blockquote>
        <p>Refspy will sort and collate references into an index, and
        optionally combine overlapping and adjacent references and add
        links.</p>
        <blockquote><b>Index</b>. {index}.</blockquote>
        <blockquote><b>Summary</b>. {summary}.</blockquote>
        <blockquote><b>Hotspots</b>. {hotspots}.</blockquote>
        <p> Because a number or a range ('1' or '2-3') could refer to either
        verses or chapters, or other regular numbers having nothing to do with
        biblical referencing ('ch.8'), we only match references that are
        preceded by a book name, a chapter number and colon ('4:'), or a verse
        marker ('v.', 'vv.').</p>
        <p>Generated by: <a href="{GENERATOR}">{GENERATOR}</a><p>
    </body>
</html>
""")
